// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSis.DataBase;

namespace WebSis.Migrations
{
    [DbContext(typeof(WebSisContext))]
    [Migration("20230218000238_migrationPublication")]
    partial class migrationPublication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebSis.Models.Secretaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80) CHARACTER SET utf8mb4")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Secretarias");
                });

            modelBuilder.Entity("WebSis.Models.TravelAuthorizations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Accountability")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ArrivalTime")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("varchar(80) CHARACTER SET utf8mb4")
                        .HasMaxLength(80);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("CurrentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CurrentYear")
                        .IsRequired()
                        .HasColumnType("varchar(4) CHARACTER SET utf8mb4")
                        .HasMaxLength(4);

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartureTime")
                        .IsRequired()
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<string>("Destiny")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<decimal>("ExpanseTotalValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Expanses")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<int>("Font")
                        .HasColumnType("int");

                    b.Property<int>("FoodQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("FoodTotalValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("FoodUnitaryValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300);

                    b.Property<int>("HostingQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("HostingTotalValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("HostingUnitaryValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Office")
                        .IsRequired()
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4")
                        .HasMaxLength(60);

                    b.Property<int>("OneWayTickets")
                        .HasColumnType("int");

                    b.Property<double>("PA")
                        .HasColumnType("double");

                    b.Property<int>("ReturnTickets")
                        .HasColumnType("int");

                    b.Property<int>("SecretariesId")
                        .HasColumnType("int");

                    b.Property<string>("SecretaryName")
                        .IsRequired()
                        .HasColumnType("varchar(80) CHARACTER SET utf8mb4")
                        .HasMaxLength(80);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("UG")
                        .HasColumnType("double");

                    b.Property<double>("UO")
                        .HasColumnType("double");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecretariesId");

                    b.HasIndex("UsersId");

                    b.ToTable("Autorização de Viagem");
                });

            modelBuilder.Entity("WebSis.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CheckedPassword")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80) CHARACTER SET utf8mb4")
                        .HasMaxLength(80);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("SecretariesId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecretariesId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebSis.Models.TravelAuthorizations", b =>
                {
                    b.HasOne("WebSis.Models.Secretaries", "Secretaries")
                        .WithMany()
                        .HasForeignKey("SecretariesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSis.Models.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebSis.Models.Users", b =>
                {
                    b.HasOne("WebSis.Models.Secretaries", "Secretaries")
                        .WithMany()
                        .HasForeignKey("SecretariesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
